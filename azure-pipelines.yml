trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: aws-docker
- name: docker-passed
  value: $[variables.dockerpassed]

jobs:
- job:
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install and build' 

  - script: echo $(docker-passed)
  # - task: ECRPullImage@1
  #   inputs:
  #     awsCredentials: 'aws'
  #     regionName: 'us-east-1'
  #     repository: 'app_repo'
  #     imageSource: 'imagetag'

  # - task: ECRPushImage@1
  #   inputs:
  #     awsCredentials: 'aws'
  #     regionName: 'us-east-1'
  #     imageSource: 'imageid'
  #     sourceImageId: '242451166731.dkr.ecr.us-east-1.amazonaws.com/app_repo:latest'
  #     repositoryName: 'app_repo'
  #     forceDockerNamingConventions: true

  # - task: SonarQubePrepare@5
  #   inputs:
  #     SonarQube: 'sonarqube'
  #     scannerMode: 'CLI'
  #     configMode: 'file'
  #     extraProperties: 'sonar.projectKey=node-app'

  # - task: SonarQubeAnalyze@5
  #   inputs:
  #     jdkVersion: 'JAVA_HOME_11_X64'

  # - task: dependency-check-build-task@6
  #   inputs:
  #     projectName: 'deploy-aws-ecs'
  #     scanPath: '.'
  #     format: 'HTML'
  #     uploadReports: true
